<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.longfor.longjian.houseqm.dao.HouseQmCheckTaskIssueLogMapper">
    <resultMap id="BaseResultMap" type="com.longfor.longjian.houseqm.po.HouseQmCheckTaskIssueLog">
        <!--
          WARNING - @mbg.generated
        -->
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="project_id" property="projectId" jdbcType="INTEGER"/>
        <result column="task_id" property="taskId" jdbcType="INTEGER"/>
        <result column="uuid" property="uuid" jdbcType="VARCHAR"/>
        <result column="issue_uuid" property="issueUuid" jdbcType="VARCHAR"/>
        <result column="sender_id" property="senderId" jdbcType="INTEGER"/>
        <result column="status" property="status" jdbcType="INTEGER"/>
        <result column="desc" property="desc" jdbcType="VARCHAR"/>
        <result column="attachment_md5_list" property="attachmentMd5List" jdbcType="VARCHAR"/>
        <result column="audio_md5_list" property="audioMd5List" jdbcType="VARCHAR"/>
        <result column="memo_audio_md5_list" property="memoAudioMd5List" jdbcType="VARCHAR"/>
        <result column="detail" property="detail" jdbcType="VARCHAR"/>
        <result column="client_create_at" property="clientCreateAt" jdbcType="TIMESTAMP"/>
        <result column="create_at" property="createAt" jdbcType="TIMESTAMP"/>
        <result column="update_at" property="updateAt" jdbcType="TIMESTAMP"/>
        <result column="delete_at" property="deleteAt" jdbcType="TIMESTAMP"/>
    </resultMap>
    <resultMap id="ResultMapWithBLOBs" type="com.longfor.longjian.houseqm.po.HouseQmCheckTaskIssueLog"
               extends="BaseResultMap">
        <!--
          WARNING - @mbg.generated
        -->
        <result column="desc" property="desc" jdbcType="LONGVARCHAR"/>
        <result column="attachment_md5_list" property="attachmentMd5List" jdbcType="LONGVARCHAR"/>
        <result column="audio_md5_list" property="audioMd5List" jdbcType="LONGVARCHAR"/>
        <result column="memo_audio_md5_list" property="memoAudioMd5List" jdbcType="LONGVARCHAR"/>
        <result column="detail" property="detail" jdbcType="LONGVARCHAR"/>
    </resultMap>
    <sql id="Base_Column_List">
        <!--
          WARNING - @mbg.generated
        -->
        id, project_id, task_id, uuid, issue_uuid, sender_id, status, client_create_at, create_at,
        update_at, delete_at
    </sql>
    <sql id="Blob_Column_List">
        <!--
          WARNING - @mbg.generated
        -->
        `desc`, attachment_md5_list, audio_md5_list, memo_audio_md5_list, detail
    </sql>
    <sql id="Full_Column_List">
    id, project_id, task_id, uuid, issue_uuid, sender_id, status, client_create_at, create_at,
    update_at, delete_at,`desc`,attachment_md5_list, audio_md5_list, memo_audio_md5_list, detail
  </sql>
    <select id="selectByIssueUuid" resultMap="ResultMapWithBLOBs">
        select
        <include refid="Full_Column_List"/>
        from house_qm_check_task_issue_log
        where issue_uuid in
        <foreach collection="issueUuids" item="issueUuid" open="(" separator="," close=")" index="index">
            #{issueUuid}
        </foreach>
        <if test="deleted == 'false'">
            and delete_at is null
        </if>
        order by client_create_at asc
    </select>
    <!--List<HouseQmCheckTaskIssueLog> searchHouseQmCheckTaskIssueLogByMyIdTaskIdLastIdUpdateAtGt(@Param("userIds")List<Integer> userIds,@Param("task_id") Integer task_id, @Param("last_id")Integer last_id, @Param("timestamp")Integer timestamp, @Param("start")Integer start, @Param("limit")Integer limit);-->
    <select id="searchHouseQmCheckTaskIssueLogByMyIdTaskIdLastIdUpdateAtGt" resultMap="BaseResultMap">
        SELECT
        <include refid="Full_Column_List"/>
        FROM
        house_qm_check_task_issue_log as hqctil
        WHERE
                (
                    hqctil.task_id = #{task_id}
                    AND
                    hqctil.id &gt; #{last_id}
                )
                AND issue_uuid IN (
                                    SELECT
                                    uuid
                                    FROM
                                    house_qm_check_task_issue as hqcti
                                    WHERE
                                    (
                                        hqcti.sender_id IN
                                        <foreach collection="userIds" item="item" open="(" separator="," close=")" index="index">
                                            #{item}
                                        </foreach>
                                    )
                                    OR (
                                            hqcti.task_id = #{task_id}
                                            AND
                                            hqcti.uuid IN (
                                                    SELECT
                                                    hqctiu.issue_uuid
                                                    FROM
                                                    house_qm_check_task_issue_user as hqctiu
                                                    WHERE
                                                    hqctiu.task_id = #{task_id}
                                                    AND
                                                    hqctiu.user_id = #{userId}
                                                    AND
                                                    delete_at IS NULL
                                                    OR delete_at = '0001-01-01 00:00:00'
                                                    )
                                        )
                                    )
                <if test="timestamp != null and timestamp > 0">
                    AND hqctil.update_at > FROM_UNIXTIME( #{timestamp} )
                </if>
                order by hqctil.id ASC LIMIT #{start},#{limit}
    </select>

    <select id="selectIdByTaskIdAndIdAndUuidInAndUpdateAtGtAndNoDeletedOrderById" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM house_qm_check_task_issue_log
        WHERE task_id=#{taskId} AND id >0 AND issue_uuid IN
        <foreach collection="uuids" item="item" index="index" open="(" separator="," close=")">#{item}</foreach>
        AND update_at &gt; #{updateAt}
        <if test="deleted=='false'">AND delete_at IS NULL</if>
        ORDER BY id DESC
    </select>

</mapper>